{
  "version": 3,
  "sources": ["../../../app/components/marketing/PricingPlan.jsx", "../../../app/routes/_marketing.pricing.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\marketing\\\\\\\\PricingPlan.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\marketing\\\\PricingPlan.jsx\");\n  import.meta.hot.lastModified = \"1690988557599.3623\";\n}\n// REMIX HMR END\n\nfunction PricingPlan({\n  title,\n  price,\n  perks,\n  icon\n}) {\n  const Icon = icon;\n  return <article>\r\n      <header>\r\n        <div className=\"icon\">\r\n          <Icon />\r\n        </div>\r\n        <h2>{title}</h2>\r\n        <p>{price}</p>\r\n      </header>\r\n      <div className=\"plan-content\">\r\n        <ol>\r\n          {perks.map(perk => <li key={perk}>{perk}</li>)}\r\n        </ol>\r\n        <div className='actions'>\r\n          <a href=\"/not-implemented\">Learn More</a>\r\n        </div>\r\n      </div>\r\n    </article>;\n}\n_c = PricingPlan;\nexport default PricingPlan;\nvar _c;\n$RefreshReg$(_c, \"PricingPlan\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\_marketing.pricing.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\_marketing.pricing.jsx\");\n  import.meta.hot.lastModified = \"1690988557599.3623\";\n}\n// REMIX HMR END\n\nimport { FaTrophy, FaHandshake } from 'react-icons/fa';\nimport PricingPlan from '~/components/marketing/PricingPlan';\nconst PRICING_PLANS = [{\n  id: 'p1',\n  title: 'Basic',\n  price: 'Free forever',\n  perks: ['1 User', 'Up to 100 expenses/year', 'Basic analytics'],\n  icon: FaHandshake\n}, {\n  id: 'p2',\n  title: 'Pro',\n  price: '$9.99/month',\n  perks: ['Unlimited Users', 'Unlimited expenses/year', 'Detailed analytics'],\n  icon: FaTrophy\n}];\nexport default function PricingPage() {\n  return <main id=\"pricing\">\r\n      <h2>Great Product, Simple Pricing</h2>\r\n      <ol id=\"pricing-plans\">\r\n        {PRICING_PLANS.map(plan => <li key={plan.id} className=\"plan\">\r\n            <PricingPlan title={plan.title} price={plan.price} perks={plan.perks} icon={plan.icon} />\r\n          </li>)}\r\n      </ol>\r\n    </main>;\n}\n_c = PricingPage;\nexport function meta() {}\nvar _c;\n$RefreshReg$(_c, \"PricingPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c"]
}
