{
  "version": 3,
  "sources": ["../../../app/components/expenses/ExpenseStatistics.jsx", "../../../app/components/expenses/ChartBar.jsx", "../../../app/components/expenses/Chart.jsx", "../../../app/routes/_app.expenses_.analysis.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\expenses\\\\\\\\ExpenseStatistics.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\expenses\\\\ExpenseStatistics.jsx\");\n  import.meta.hot.lastModified = \"1690988557583.737\";\n}\n// REMIX HMR END\n\nimport { useMemo } from 'react';\nfunction calculateSummaryStatistics(expenses) {\n  const amounts = expenses.map(expense => +expense.amount);\n  const maxAmount = Math.max(...amounts);\n  const minAmount = Math.min(...amounts);\n  const sum = expenses.reduce((prevVal, curVal) => curVal.amount + prevVal, 0);\n  const mean = sum / expenses.length;\n  return {\n    minAmount,\n    maxAmount,\n    sum,\n    mean\n  };\n}\nfunction ExpenseStatistics({\n  expenses\n}) {\n  _s();\n  const {\n    minAmount,\n    maxAmount,\n    sum,\n    mean\n  } = useMemo(() => calculateSummaryStatistics(expenses), [expenses]);\n  return <section>\r\n      <h2>Summary Statistics</h2>\r\n      <dl id=\"expense-statistics\">\r\n        <div>\r\n          <dt>Total</dt>\r\n          <dd>${sum.toFixed(2)}</dd>\r\n        </div>\r\n        <div>\r\n          <dt>Average</dt>\r\n          <dd>${mean.toFixed(2)}</dd>\r\n        </div>\r\n        <div>\r\n          <dt> Min. Amount</dt>\r\n          <dd>${minAmount.toFixed(2)}</dd>\r\n        </div>\r\n        <div>\r\n          <dt>Max. Amount</dt>\r\n          <dd>${maxAmount.toFixed(2)}</dd>\r\n        </div>\r\n      </dl>\r\n    </section>;\n}\n_s(ExpenseStatistics, \"p2xC83GiILF2qC9FD1C02JEZGaY=\");\n_c = ExpenseStatistics;\nexport default ExpenseStatistics;\nvar _c;\n$RefreshReg$(_c, \"ExpenseStatistics\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\expenses\\\\\\\\ChartBar.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\expenses\\\\ChartBar.jsx\");\n  import.meta.hot.lastModified = \"1690988557583.737\";\n}\n// REMIX HMR END\n\nconst ChartBar = ({\n  maxValue,\n  value,\n  label\n}) => {\n  let barFillHeight = '0%';\n  if (maxValue > 0) {\n    barFillHeight = Math.round(value / maxValue * 100) + '%';\n  }\n  return <div className=\"chart-bar\">\r\n      <div className=\"chart-bar--inner\">\r\n        <div className=\"chart-bar--fill\" style={{\n        height: barFillHeight\n      }}></div>\r\n      </div>\r\n      <div className=\"chart-bar--label\">{label}</div>\r\n    </div>;\n};\n_c = ChartBar;\nexport default ChartBar;\nvar _c;\n$RefreshReg$(_c, \"ChartBar\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\expenses\\\\\\\\Chart.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\expenses\\\\Chart.jsx\");\n  import.meta.hot.lastModified = \"1690988557583.737\";\n}\n// REMIX HMR END\n\nimport ChartBar from './ChartBar';\nfunction Chart({\n  expenses\n}) {\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (const expense of expenses) {\n    const expenseMonth = new Date(expense.date).getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  const dataPointValues = chartDataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  return <section>\r\n      <h2>Monthly Expenses</h2>\r\n      <ol className='chart'>\r\n        {chartDataPoints.map(dataPoint => <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMaximum} label={dataPoint.label} />)}\r\n      </ol>\r\n    </section>;\n}\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\_app.expenses_.analysis.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\_app.expenses_.analysis.jsx\");\n  import.meta.hot.lastModified = \"1690988557599.3623\";\n}\n// REMIX HMR END\n\nconst DUMMY_EXPENSES = [{\n  id: 'e1',\n  title: 'First Expense',\n  amount: 12.99,\n  date: new Date().toISOString()\n}, {\n  id: 'e2',\n  title: 'Second Expense',\n  amount: 16.99,\n  date: new Date().toISOString()\n}];\nimport ExpenseStatistics from '~/components/expenses/ExpenseStatistics';\nimport Chart from '~/components/expenses/Chart';\nexport default function ExpensesAnalysisPage() {\n  return <main>\r\n        <Chart expenses={DUMMY_EXPENSES} />\r\n        <ExpenseStatistics expenses={DUMMY_EXPENSES} />\r\n      </main>;\n}\n_c = ExpensesAnalysisPage;\nvar _c;\n$RefreshReg$(_c, \"ExpensesAnalysisPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;AAqBA,mBAAwB;AAyBlB;AA7CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,6DAA+D,EAAE;AAAA,EAC1G;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAkD;AAClD,cAAY,IAAI,eAAe;AACjC;AAIA,SAAS,2BAA2B,UAAU;AAC5C,QAAM,UAAU,SAAS,IAAI,aAAW,CAAC,QAAQ,MAAM;AACvD,QAAM,YAAY,KAAK,IAAI,GAAG,OAAO;AACrC,QAAM,YAAY,KAAK,IAAI,GAAG,OAAO;AACrC,QAAM,MAAM,SAAS,OAAO,CAAC,SAAS,WAAW,OAAO,SAAS,SAAS,CAAC;AAC3E,QAAM,OAAO,MAAM,SAAS;AAC5B,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AACA,SAAS,kBAAkB;AAAA,EACzB;AACF,GAAG;AACD,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,QAAI,sBAAQ,MAAM,2BAA2B,QAAQ,GAAG,CAAC,QAAQ,CAAC;AAClE,SAAO,mDAAC,aACJ;AAAA,uDAAC,QAAG,kCAAJ;AAAA;AAAA;AAAA;AAAA,WAAsB;AAAA,IACtB,mDAAC,QAAG,IAAG,sBACL;AAAA,yDAAC,SACC;AAAA,2DAAC,QAAG,qBAAJ;AAAA;AAAA;AAAA;AAAA,eAAS;AAAA,QACT,mDAAC,QAAG;AAAA;AAAA,UAAE,IAAI,QAAQ,CAAC;AAAA,aAAnB;AAAA;AAAA;AAAA;AAAA,eAAqB;AAAA,WAFvB;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,SACC;AAAA,2DAAC,QAAG,uBAAJ;AAAA;AAAA;AAAA;AAAA,eAAW;AAAA,QACX,mDAAC,QAAG;AAAA;AAAA,UAAE,KAAK,QAAQ,CAAC;AAAA,aAApB;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,WAFxB;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,SACC;AAAA,2DAAC,QAAG,4BAAJ;AAAA;AAAA;AAAA;AAAA,eAAgB;AAAA,QAChB,mDAAC,QAAG;AAAA;AAAA,UAAE,UAAU,QAAQ,CAAC;AAAA,aAAzB;AAAA;AAAA;AAAA;AAAA,eAA2B;AAAA,WAF7B;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,SACC;AAAA,2DAAC,QAAG,2BAAJ;AAAA;AAAA;AAAA;AAAA,eAAe;AAAA,QACf,mDAAC,QAAG;AAAA;AAAA,UAAE,UAAU,QAAQ,CAAC;AAAA,aAAzB;AAAA;AAAA;AAAA;AAAA,eAA2B;AAAA,WAF7B;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,SAhBF;AAAA;AAAA;AAAA;AAAA,WAiBA;AAAA,OAnBG;AAAA;AAAA;AAAA;AAAA,SAoBL;AACJ;AACA,GAAG,mBAAmB,8BAA8B;AACpD,KAAK;AACL,IAAO,4BAAQ;AACf,IAAI;AACJ,aAAa,IAAI,mBAAmB;AAEpC,OAAO,eAAe;AACtB,OAAO,eAAe;;;AC3Cd,IAAAA,0BAAA;AA9BR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,oDAAsD,EAAE;AAAA,EACjG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyC;AACzC,cAAY,IAAI,eAAe;AACjC;AAGA,IAAM,WAAW,CAAC;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,MAAI,gBAAgB;AACpB,MAAI,WAAW,GAAG;AAChB,oBAAgB,KAAK,MAAM,QAAQ,WAAW,GAAG,IAAI;AAAA,EACvD;AACA,SAAO,oDAAC,SAAI,WAAU,aAClB;AAAA,wDAAC,SAAI,WAAU,oBACb,8DAAC,SAAI,WAAU,mBAAkB,OAAO;AAAA,MACxC,QAAQ;AAAA,IACV,KAFE;AAAA;AAAA;AAAA;AAAA,WAEC,KAHH;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACA,oDAAC,SAAI,WAAU,oBAAoB,mBAAnC;AAAA;AAAA;AAAA;AAAA,WAAyC;AAAA,OANtC;AAAA;AAAA;AAAA;AAAA,SAOL;AACJ;AACAC,MAAK;AACL,IAAO,mBAAQ;AACf,IAAIA;AACJ,aAAaA,KAAI,UAAU;AAE3B,OAAO,eAAe;AACtB,OAAO,eAAe;;;ACwBhB,IAAAC,0BAAA;AAnEN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iDAAmD,EAAE;AAAA,EAC9F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAsC;AACtC,cAAY,IAAI,eAAe;AACjC;AAIA,SAAS,MAAM;AAAA,EACb;AACF,GAAG;AACD,QAAM,kBAAkB,CAAC;AAAA,IACvB,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,IACP,OAAO;AAAA,EACT,CAAC;AACD,aAAW,WAAW,UAAU;AAC9B,UAAM,eAAe,IAAI,KAAK,QAAQ,IAAI,EAAE,SAAS;AACrD,oBAAgB,YAAY,EAAE,SAAS,QAAQ;AAAA,EACjD;AACA,QAAM,kBAAkB,gBAAgB,IAAI,eAAa,UAAU,KAAK;AACxE,QAAM,eAAe,KAAK,IAAI,GAAG,eAAe;AAChD,SAAO,oDAAC,aACJ;AAAA,wDAAC,QAAG,gCAAJ;AAAA;AAAA;AAAA;AAAA,WAAoB;AAAA,IACpB,oDAAC,QAAG,WAAU,SACX,0BAAgB,IAAI,eAAa,oDAAC,oBAA+B,OAAO,UAAU,OAAO,UAAU,cAAc,OAAO,UAAU,SAAlF,UAAU,OAAzB;AAAA;AAAA;AAAA;AAAA,WAAwG,CAAE,KAD9I;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAJG;AAAA;AAAA;AAAA;AAAA,SAKL;AACJ;AACAC,MAAK;AACL,IAAO,gBAAQ;AACf,IAAIA;AACJ,aAAaA,KAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;;;AC7Cd,IAAAC,0BAAA;AAlCR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mDAAqD,EAAE;AAAA,EAChG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA0C;AAC1C,cAAY,IAAI,eAAe;AACjC;AAGA,IAAM,iBAAiB,CAAC;AAAA,EACtB,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAM,oBAAI,KAAK,GAAE,YAAY;AAC/B,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAM,oBAAI,KAAK,GAAE,YAAY;AAC/B,CAAC;AAGc,SAAR,uBAAwC;AAC7C,SAAO,oDAAC,UACF;AAAA,wDAAC,iBAAM,UAAU,kBAAjB;AAAA;AAAA;AAAA;AAAA,WAAiC;AAAA,IACjC,oDAAC,6BAAkB,UAAU,kBAA7B;AAAA;AAAA;AAAA;AAAA,WAA6C;AAAA,OAF5C;AAAA;AAAA;AAAA;AAAA,SAGH;AACN;AACAC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,sBAAsB;AAEvC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c"]
}
